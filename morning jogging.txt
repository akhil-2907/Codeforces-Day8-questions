#include<bits/stdc++.h>
using namespace std;
 
//solution:
#define int int64_t
#define span(a) begin(a), end(a)
 
template<typename T>
using minpq = priority_queue<T, vector<T>, greater<T>>;
 
void hike() {
  int n, m; cin >> n >> m;
  vector<int> a[n];
  int ans[n][m];
  for(int i = 0; i < n;  ++i) {
    a[i] = vector<int>(m);
    for(int& j: a[i]) cin >> j;
    sort(span(a[i]), greater<int>());
  }
  minpq<pair<int, int>> q;
  for(int i = 0; i < m; ++i) {
    q.emplace(a[0][i], i);
    ans[0][i] = a[0][i];
  }
  for(int i = 1; i < n; ++i) {
    minpq<pair<int, int>> r;
    for(int j = 0; j < m; ++j) {
      auto [x, k] = q.top(); //current maximum;
      ans[i][k] = a[i][j]; //current minimum;
      r.emplace(min(a[i][j], x), k);
      q.pop();
    }
    q = move(r);
  }
  for(auto& i: ans) {
    for(auto& j: i) cout << j << " ";
    cout << "\n";
  }
}
 
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr); cout.tie(nullptr);
  int t = 1; cin >> t;
  while(t--) hike();
  return 0;
}